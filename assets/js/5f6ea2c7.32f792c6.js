"use strict";(self.webpackChunkdocusaurus_template_lab=self.webpackChunkdocusaurus_template_lab||[]).push([[354],{6573:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"authentication/index","title":"Authentication in MongoDB","description":"Authentication is a crucial security feature that verifies the identity of clients attempting to connect to your MongoDB deployment. MongoDB provides several authentication mechanisms to accommodate different security requirements.","source":"@site/docs/authentication/index.mdx","sourceDirName":"authentication","slug":"/authentication/","permalink":"/mongodb-security-basics/docs/authentication/","draft":false,"unlisted":false,"editUrl":"https://github.com/mongodb-developer/mongodb-security-basics/blob/main/docs/authentication/index.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Run: Setup Network Access","permalink":"/mongodb-security-basics/docs/challenge/network"},"next":{"title":"Run: Setup Authentication","permalink":"/mongodb-security-basics/docs/challenge/authentication"}}');var s=t(4848),a=t(8453),r=t(1470),l=t(9365);const c={sidebar_position:3},o="Authentication in MongoDB",u={},d=[{value:"Authentication Mechanisms",id:"authentication-mechanisms",level:2},{value:"SCRAM Authentication",id:"scram-authentication",level:3},{value:"Creating a User with SCRAM Authentication",id:"creating-a-user-with-scram-authentication",level:4},{value:"Connecting with SCRAM Authentication",id:"connecting-with-scram-authentication",level:4},{value:"AWS IAM Authentication",id:"aws-iam-authentication",level:3},{value:"X.509 Certificate Authentication",id:"x509-certificate-authentication",level:3},{value:"SCRAM Authentication",id:"scram-authentication-1",level:3},{value:"X.509 Certificate Authentication",id:"x509-certificate-authentication-1",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Challenges and Exercises",id:"challenges-and-exercises",level:2},{value:"Next Steps",id:"next-steps",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"authentication-in-mongodb",children:"Authentication in MongoDB"})}),"\n",(0,s.jsx)(n.p,{children:"Authentication is a crucial security feature that verifies the identity of clients attempting to connect to your MongoDB deployment. MongoDB provides several authentication mechanisms to accommodate different security requirements."}),"\n",(0,s.jsx)(n.h2,{id:"authentication-mechanisms",children:"Authentication Mechanisms"}),"\n",(0,s.jsxs)(r.A,{groupId:"deployment",children:[(0,s.jsxs)(l.A,{value:"atlas",label:"MongoDB Atlas",children:[(0,s.jsx)(n.p,{children:"MongoDB Atlas supports multiple authentication mechanisms:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SCRAM (Default)"}),": The default and recommended mechanism for MongoDB, providing secure authentication using salted challenge-response methods."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"X.509 Certificate Authentication"}),": Certificate-based authentication that uses SSL/TLS certificates for verifying client identity, typically used in environments that require high security."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AWS IAM Authentication"}),":MongoDB"," Atlas supports AWS IAM authentication, allowing users to authenticate using their AWS Identity and Access Management roles, which is useful for integration with AWS services."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Workforce Federation Authentication"}),": Allows users to integrate MongoDB Atlas with external identity providers (IdPs) like Okta or Azure AD for centralized access management and single sign-on (SSO)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Workload Federation Authentication"}),": Enables authentication for applications and workloads by allowing them to assume predefined roles, simplifying access management for services running in hybrid or multi-cloud environments."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LDAP Authentication"}),": Allows integration with corporate directory services, enabling centralized management of user access across the organization."]}),"\n"]}),(0,s.jsx)(n.h3,{id:"scram-authentication",children:"SCRAM Authentication"}),(0,s.jsx)(n.p,{children:"SCRAM (Salted Challenge Response Authentication Mechanism) is MongoDB's default authentication mechanism. It provides secure username/password authentication."}),(0,s.jsx)(n.h4,{id:"creating-a-user-with-scram-authentication",children:"Creating a User with SCRAM Authentication"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// In MongoDB Atlas UI: Database Access > Add New Database User\n// Or using Atlas CLI:\natlas dbusers create --username demoUser --password mySecurePassword --role readWriteAnyDatabase --projectId \n\nDatabase user 'demoUser' successfully created.\n"})}),(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:" Atlas Administration API"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'//Use Atlas Admin API\nPOST /api/atlas/v1.0/groups/{GROUP-ID}/databaseUsers\n{\n "databaseName": "admin",\n "username": "demoUser",\n "password": "secure_password",\n "roles": [{\n   "roleName": "readWrite",\n   "databaseName": "myDatabase"\n }]\n}\n'})})]}),(0,s.jsx)(n.h4,{id:"connecting-with-scram-authentication",children:"Connecting with SCRAM Authentication"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'mongosh "mongodb+srv://cluster0.example.mongodb.net/myDatabase" \\\n  --username demoUser \\\n  --password mySecurePassword\n'})}),(0,s.jsx)(n.h3,{id:"aws-iam-authentication",children:"AWS IAM Authentication"}),(0,s.jsx)(n.p,{children:"Atlas clusters on AWS can use IAM authentication:"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Configure IAM Authentication in Atlas UI"}),"\n",(0,s.jsx)(n.li,{children:"Create an IAM Role with necessary permissions"}),"\n",(0,s.jsx)(n.li,{children:"Connect using AWS credentials:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'mongosh "mongodb+srv://<atlas-host-name>/test?authSource=%24external&authMechanism=MONGODB-AWS" --username <access-key-id> --password <secret-key>\n'})}),(0,s.jsx)(n.h3,{id:"x509-certificate-authentication",children:"X.509 Certificate Authentication"}),(0,s.jsx)(n.p,{children:"Certificate-based authentication that uses SSL/TLS certificates for verifying client identity, typically used in environments that require high security."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"## Create User\n!atlas dbusers create --username demoX509User --x509Type MANAGED --role readAnyDatabase --projectId {project_id}\n\n## Create the relevant certificate\n!atlas dbusers certs create --username demoX509User --monthsUntilExpiration 1 --projectId {project_id} > /tmp/cert.pem\n"})}),(0,s.jsx)(n.p,{children:"Connect using X509 via shell"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'mongosh "mongodb+srv://<atlas-host-name>/test?authSource=%24external&authMechanism=MONGODB-X509"  --tlsCertificateKeyFile /tmp/cert.pem\n'})})]}),(0,s.jsxs)(l.A,{value:"onprem",label:"On-Premises",children:[(0,s.jsx)(n.p,{children:"On-premises MongoDB deployments support:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SCRAM (Default)"}),": Username/Password Authentication"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"X.509 Certificate Authentication"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LDAP Authentication"})," (Enterprise Only)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Kerberos Authentication"})," (Enterprise Only)"]}),"\n"]}),(0,s.jsx)(n.h3,{id:"scram-authentication-1",children:"SCRAM Authentication"}),(0,s.jsx)(n.p,{children:"Configure SCRAM authentication in mongod.conf:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"security:\n  authorization: enabled\n"})}),(0,s.jsx)(n.p,{children:"Create administrative user:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'use admin\ndb.createUser({\n  user: "demoUser",\n  pwd: "mySecurePassword",\n  roles: [ { role: "readWrite", db: "myDatabase" } ]\n})\n'})}),(0,s.jsx)(n.p,{children:"Connect with authentication:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"mongosh --username demoUser --password mySecurePassword --authenticationDatabase admin\n"})}),(0,s.jsx)(n.h3,{id:"x509-certificate-authentication-1",children:"X.509 Certificate Authentication"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Generate certificates:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl req -newkey rsa:2048 -new -x509 -days 365 -nodes \\\n  -out mongodb-cert.crt -keyout mongodb-cert.key\n"})}),(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Configure mongod.conf:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"net:\n  tls:\n    mode: requireTLS\n    certificateKeyFile: /path/to/mongodb-cert.pem\n    CAFile: /path/to/ca.pem\nsecurity:\n  authorization: enabled\n"})}),(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Create X.509 user:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'db.getSiblingDB("$external").runCommand({\n  createUser: "CN=myClient,OU=myOrgUnit,O=myOrg,L=myLocality,ST=myState,C=myCountry",\n  roles: [\n    { role: "readWrite", db: "myDatabase" }\n  ]\n})\n'})}),(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Connect with X.509:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"mongosh --tls --tlsCertificateKeyFile client.pem \\\n  --authenticationMechanism MONGODB-X509 \\\n  --authenticationDatabase '$external'\n"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(l.A,{value:"atlas",label:"MongoDB Atlas",children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"User Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use Database Access page in Atlas UI for user management"}),"\n",(0,s.jsx)(n.li,{children:"Implement role-based access control (RBAC)"}),"\n",(0,s.jsx)(n.li,{children:"Regularly audit user access and permissions"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Connection Security"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use connection strings with ",(0,s.jsx)(n.code,{children:"mongodb+srv://"})," protocol"]}),"\n",(0,s.jsx)(n.li,{children:"Enable Network Access List restrictions"}),"\n",(0,s.jsx)(n.li,{children:"Implement IP access lists"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication Methods"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use AWS IAM authentication when possible for AWS deployments"}),"\n",(0,s.jsx)(n.li,{children:"Implement strong password policies"}),"\n",(0,s.jsx)(n.li,{children:"Consider X.509 for application authentication"}),"\n"]}),"\n"]}),"\n"]})}),(0,s.jsx)(l.A,{value:"onprem",label:"On-Premises",children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Security Configuration"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Always enable authentication and authorization"}),"\n",(0,s.jsx)(n.li,{children:"Use TLS/SSL for all connections"}),"\n",(0,s.jsx)(n.li,{children:"Regularly rotate credentials and certificates"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"User Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Follow principle of least privilege"}),"\n",(0,s.jsx)(n.li,{children:"Regular audit of user permissions"}),"\n",(0,s.jsx)(n.li,{children:"Implement role-based access control"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Infrastructure Security"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Secure the underlying operating system"}),"\n",(0,s.jsx)(n.li,{children:"Configure network security (firewalls, VPNs)"}),"\n",(0,s.jsx)(n.li,{children:"Regular security patches and updates"}),"\n"]}),"\n"]}),"\n"]})})]}),"\n",(0,s.jsx)(n.h2,{id:"challenges-and-exercises",children:"Challenges and Exercises"}),"\n",(0,s.jsxs)(n.p,{children:["Let's move to the ",(0,s.jsx)(n.a,{href:"./challenge/authentication",children:"Authentication challenge"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"After mastering authentication, proceed to learn about Role-Based Access Control (RBAC) to implement fine-grained access control for your MongoDB deployment."})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var i=t(8215);const s={tabItem:"tabItem_Ymn6"};var a=t(4848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,r),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>v});var i=t(6540),s=t(8215),a=t(3104),r=t(6347),l=t(205),c=t(7485),o=t(1682),u=t(679);function d(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:s}}=e;return{value:n,label:t,attributes:i,default:s}}))}(t);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const s=(0,r.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(a),(0,i.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,a=h(e),[r,c]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:a}))),[o,d]=p({queryString:t,groupId:s}),[x,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,a]=(0,u.Dv)(t);return[s,(0,i.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:s}),j=(()=>{const e=o??x;return m({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{j&&c(j)}),[j]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),g(e)}),[d,g,a]),tabValues:a}}var g=t(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function b(e){let{className:n,block:t,selectedValue:i,selectValue:r,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),u=e=>{const n=e.currentTarget,t=c.indexOf(n),s=l[t].value;s!==i&&(o(n),r(s))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>c.push(e),onKeyDown:d,onClick:u,...a,className:(0,s.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function A(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=x(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(A,{...n,...e})]})}function v(e){const n=(0,g.A)();return(0,f.jsx)(y,{...e,children:d(e.children)},String(n))}}}]);